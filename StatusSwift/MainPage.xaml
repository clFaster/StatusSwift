<?xml version="1.0" encoding="utf-8"?>

<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="StatusSwift.MainPage"
             xmlns:viewmodel="clr-namespace:StatusSwift.ViewModel"
             xmlns:views="clr-namespace:StatusSwift.Views"
             xmlns:tb="https://notifyicon.com/"
             x:DataType="viewmodel:MainViewModel"
             BackgroundColor="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}">

    <Grid RowDefinitions="*">
        <!-- Taskbar Icon -->
        <tb:TaskbarIcon
            IconSource="Resources/AppIcon/appicon.ico"
            x:Name="TrayIcon"
            LeftClickCommand="{Binding ShowWindowCommand}"
            NoLeftClickDelay="True"
            ToolTipText="{Binding TrayTooltipText}">
            <FlyoutBase.ContextFlyout>
                <MenuFlyout>
                    <MenuFlyoutItem Command="{Binding ToggleStatusSwiftActiveCommand}" Text="{Binding ButtonText}" />
                    <MenuFlyoutItem Command="{Binding ShowWindowCommand}" Text="{Binding WindowText}" />
                    <MenuFlyoutSeparator />
                    <MenuFlyoutItem Command="{Binding ExitApplicationCommand}" Text="Exit" />
                </MenuFlyout>
            </FlyoutBase.ContextFlyout>
        </tb:TaskbarIcon>

        <!-- Main Content -->
        <Grid Padding="25" VerticalOptions="Fill" HorizontalOptions="Fill">
            <ContentView VerticalOptions="Center" HorizontalOptions="Center">
                <Border
                    StrokeShape="RoundRectangle 12,12,12,12"
                    BackgroundColor="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource OffBlack}}"
                    Stroke="{AppThemeBinding Light={StaticResource Gray100}, Dark={StaticResource Gray800}}"
                    StrokeThickness="1"
                    Padding="20"
                    Margin="10"
                    HorizontalOptions="Center"
                    MinimumWidthRequest="350"
                    WidthRequest="350"
                    MaximumWidthRequest="350">
                    <Border.Shadow>
                        <Shadow Brush="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray900}}"
                                Offset="0,4"
                                Radius="8" />
                    </Border.Shadow>
                    <!-- Dynamic Content based on IsActive state -->
                    <ContentView x:Name="DynamicContentView">
                        <ContentView.Triggers>
                            <DataTrigger
                                TargetType="ContentView"
                                Binding="{Binding IsActive}"
                                Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <views:StatusActiveView
                                            BindingContext="{Binding}" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger
                                TargetType="ContentView"
                                Binding="{Binding IsActive}"
                                Value="False">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <views:StatusInactiveView
                                            BindingContext="{Binding}" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </ContentView.Triggers>
                    </ContentView>
                </Border>
            </ContentView>
        </Grid>
    </Grid>
</ContentPage>