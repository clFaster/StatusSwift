name: Build Status Swift

# Workflow triggers
on: 
  workflow_dispatch:
    inputs:
        release-type:
            type: choice
            description: Which type of release to create?
            required: true
            default: patch
            options: 
                - patch
                - minor
                - major

# Jobs to be executed
jobs:
  build:
    runs-on: windows-latest

    env:
      ProjectName: StatusSwift.csproj
      DotNetVersion: 8.0.x

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Read current version
      id: read_version
      run: |
        version=$(cat VERSION)
        echo "Current version: $version"
        echo "::set-output name=current_version::$version"

    - name: Bump version
      id: bump_version
      run: |
        increment=${{ inputs.release-type }}
        current_version=${{ steps.read_version.outputs.current_version }}

        IFS='.' read -r -a parts <<< "$current_version"

        major=${parts[0]}
        minor=${parts[1]}
        patch=${parts[2]}

        if [ "$increment" = "major" ]; then
          major=$((major + 1))
          minor=0
          patch=0
        elif [ "$increment" = "minor" ]; then
          minor=$((minor + 1))
          patch=0
        elif [ "$increment" = "patch" ]; then
          patch=$((patch + 1))
        else
          echo "Invalid increment type"
          exit 1
        fi

        new_version="$major.$minor.$patch"
        echo "New version: $new_version"
        echo "::set-output name=new_version::$new_version"

    - name: Update version var
      id: write_version
      run: |
        gh api \
        --method PATCH \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        /repos/clFaster/StatusSwift/actions/variables/VERSION \
        -f "name=VERSION" -f "value=${{ steps.bump_version.outputs.new_version }}"
