name: Publish to Store

# Workflow triggers
on: 
  workflow_dispatch:
    inputs:
        release-type:
            type: choice
            description: Which type of release to create?
            required: true
            default: patch
            options: 
                - patch
                - minor
                - major

# Jobs to be executed
jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Read current version
      run: |
        echo "Current version: ${{ vars.VERSION }}"

    - name: Bump version
      id: bump_version
      run: |
        # Retrieve the increment type from the GitHub Actions input
        increment="${{ inputs.release-type }}"

        # Split the VERSION variable into its major, minor, and patch components
        IFS='.' read -r -a parts <<< "${{ vars.VERSION }}"

        # Check if the VERSION variable was split correctly
        if [ "${#parts[@]}" -ne 3 ]; then
        echo "Invalid version format"
        exit 1
        fi

        major=${parts[0]}
        minor=${parts[1]}
        patch=${parts[2]}

        # Increment the appropriate version component
        if [ "$increment" = "major" ]; then
        major=$((major + 1))
        minor=0
        patch=0
        elif [ "$increment" = "minor" ]; then
        minor=$((minor + 1))
        patch=0
        elif [ "$increment" = "patch" ]; then
        patch=$((patch + 1))
        else
        echo "Invalid increment type"
        exit 1
        fi

        # Construct the new version string
        new_version="$major.$minor.$patch"

        # Output the new version
        echo "New version: $new_version"

        # Set the output variable for GitHub Actions
        echo "::set-output name=new_version::$new_version"


    - name: Update version var
      id: write_version
      env:
        GH_TOKEN: ${{ secrets.STATUS_SWIFT_WORKFLOW_UPDATE_VERSION }}
      run: |
        gh api \
        --method PATCH \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        /repos/clFaster/StatusSwift/actions/variables/VERSION \
        -f "name=VERSION" -f "value=${{ steps.bump_version.outputs.new_version }}"
